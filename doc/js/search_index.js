var search_data = {"index":{"searchIndex":["temperature","initializationargumentserror","invaliddegreeserror","invalidnumericortemperatureerror","invalidscaleerror","object","temperature","+()","+()","-()","-()","-@()","-@()","<=>()","<=>()","[]()","[]()","new()","new()","set_degrees()","set_degrees()","set_scale()","set_scale()","to_celsius()","to_celsius()","to_fahrenheit()","to_fahrenheit()","to_kelvin()","to_kelvin()","to_rankine()","to_rankine()","to_scale()","to_scale()"],"longSearchIndex":["basictemperature","basictemperature::initializationargumentserror","basictemperature::invaliddegreeserror","basictemperature::invalidnumericortemperatureerror","basictemperature::invalidscaleerror","object","temperature","basictemperature#+()","basictemperature#+()","basictemperature#-()","basictemperature#-()","basictemperature#-@()","basictemperature#-@()","basictemperature#<=>()","basictemperature#<=>()","basictemperature::[]()","basictemperature::[]()","basictemperature::new()","basictemperature::new()","basictemperature#set_degrees()","basictemperature#set_degrees()","basictemperature#set_scale()","basictemperature#set_scale()","basictemperature#to_celsius()","basictemperature#to_celsius()","basictemperature#to_fahrenheit()","basictemperature#to_fahrenheit()","basictemperature#to_kelvin()","basictemperature#to_kelvin()","basictemperature#to_rankine()","basictemperature#to_rankine()","basictemperature#to_scale()","basictemperature#to_scale()"],"info":[["BasicTemperature","","classes/BasicTemperature.html","","<p>Temperature is a simple Value Object for basic temperature operations like conversions from <code>Celsius</code> to …\n"],["BasicTemperature::InitializationArgumentsError","","classes/BasicTemperature/InitializationArgumentsError.html","","<p>Raised when <code>Temperature.new</code> is called with mixed positional and keyword arguments or without arguments …\n"],["BasicTemperature::InvalidDegreesError","","classes/BasicTemperature/InvalidDegreesError.html","","<p>Raised when <code>degrees</code> is not a Numeric.\n"],["BasicTemperature::InvalidNumericOrTemperatureError","","classes/BasicTemperature/InvalidNumericOrTemperatureError.html","","<p>Raised when <code>other</code> is not a Numeric or Temperature in math operations.\n"],["BasicTemperature::InvalidScaleError","","classes/BasicTemperature/InvalidScaleError.html","","<p>Raised when <code>scale</code> can not be casted to any possible scale value. See SCALES.\n"],["Object","","classes/Object.html","",""],["Temperature","","classes/Temperature.html","","<p>Temperature is a simple Value Object for basic temperature operations like conversions from <code>Celsius</code> to …\n"],["+","BasicTemperature","classes/BasicTemperature.html#method-i-2B","(other)","<p>Performs addition. Returns a new Temperature.\n\n<pre><code>Temperature[20, :celsius] + Temperature[10, :celsius]\n# ...\n</code></pre>\n"],["+","BasicTemperature","classes/BasicTemperature.html#method-i-2B","(other)","<p>Performs addition. Returns a new Temperature.\n\n<pre><code>Temperature[20, :celsius] + Temperature[10, :celsius]\n# ...\n</code></pre>\n"],["-","BasicTemperature","classes/BasicTemperature.html#method-i-2D","(other)","<p>Performs subtraction. Returns a new Temperature.\n\n<pre><code>Temperature[20, :celsius] - Temperature[10, :celsius] ...\n</code></pre>\n"],["-","BasicTemperature","classes/BasicTemperature.html#method-i-2D","(other)","<p>Performs subtraction. Returns a new Temperature.\n\n<pre><code>Temperature[20, :celsius] - Temperature[10, :celsius] ...\n</code></pre>\n"],["-@","BasicTemperature","classes/BasicTemperature.html#method-i-2D-40","()","<p>Returns a new Temperature with negated <code>degrees</code>.\n\n<pre><code>-Temperature[20, :celsius]\n# =&gt; -20 °C\n</code></pre>\n"],["-@","BasicTemperature","classes/BasicTemperature.html#method-i-2D-40","()","<p>Returns a new Temperature with negated <code>degrees</code>.\n\n<pre><code>-Temperature[20, :celsius]\n# =&gt; -20 °C\n</code></pre>\n"],["<=>","BasicTemperature","classes/BasicTemperature.html#method-i-3C-3D-3E","(other)","<p>Compares temperture with <code>other</code> temperature.\n<p>Returns <code>0</code> if they are considered as equal.\n<p>Two temperatures …\n"],["<=>","BasicTemperature","classes/BasicTemperature.html#method-i-3C-3D-3E","(other)","<p>Compares temperture with <code>other</code> temperature.\n<p>Returns <code>0</code> if they are considered as equal.\n<p>Two temperatures …\n"],["[]","BasicTemperature","classes/BasicTemperature.html#method-c-5B-5D","(*args, **kwargs)","<p>Creates a new instance of Temperature. Alias for <code>new</code>.\n"],["[]","BasicTemperature","classes/BasicTemperature.html#method-c-5B-5D","(*args, **kwargs)","<p>Creates a new instance of Temperature. Alias for <code>new</code>.\n"],["new","BasicTemperature","classes/BasicTemperature.html#method-c-new","(*positional_arguments, **keyword_arguments)","<p>Creates a new instance of Temperature. Is aliased as <code>[]</code>.\n"],["new","BasicTemperature","classes/BasicTemperature.html#method-c-new","(*positional_arguments, **keyword_arguments)","<p>Creates a new instance of Temperature. Is aliased as <code>[]</code>.\n"],["set_degrees","BasicTemperature","classes/BasicTemperature.html#method-i-set_degrees","(degrees)","<p>Returns a new Temperature with updated <code>degrees</code>.\n\n<pre><code>temperature = Temperature[0, :celsius]\n# =&gt; 0 °C\n\nnew_temperature ...\n</code></pre>\n"],["set_degrees","BasicTemperature","classes/BasicTemperature.html#method-i-set_degrees","(degrees)","<p>Returns a new Temperature with updated <code>degrees</code>.\n\n<pre><code>temperature = Temperature[0, :celsius]\n# =&gt; 0 °C\n\nnew_temperature ...\n</code></pre>\n"],["set_scale","BasicTemperature","classes/BasicTemperature.html#method-i-set_scale","(scale)","<p>Returns a new Temperature with updated <code>scale</code>.\n\n<pre><code>temperature = Temperature[0, :celsius]\n# =&gt; 0 °C\n\nnew_temperature ...\n</code></pre>\n"],["set_scale","BasicTemperature","classes/BasicTemperature.html#method-i-set_scale","(scale)","<p>Returns a new Temperature with updated <code>scale</code>.\n\n<pre><code>temperature = Temperature[0, :celsius]\n# =&gt; 0 °C\n\nnew_temperature ...\n</code></pre>\n"],["to_celsius","BasicTemperature","classes/BasicTemperature.html#method-i-to_celsius","()","<p>Converts temperature to Celsius scale. If temperature is already in Celsius, returns current temperature …\n"],["to_celsius","BasicTemperature","classes/BasicTemperature.html#method-i-to_celsius","()","<p>Converts temperature to Celsius scale. If temperature is already in Celsius, returns current temperature …\n"],["to_fahrenheit","BasicTemperature","classes/BasicTemperature.html#method-i-to_fahrenheit","()","<p>Converts temperature to Fahrenheit scale. If temperature is already in Fahrenheit, returns current temperature …\n"],["to_fahrenheit","BasicTemperature","classes/BasicTemperature.html#method-i-to_fahrenheit","()","<p>Converts temperature to Fahrenheit scale. If temperature is already in Fahrenheit, returns current temperature …\n"],["to_kelvin","BasicTemperature","classes/BasicTemperature.html#method-i-to_kelvin","()","<p>Converts temperature to Kelvin scale. If temperature is already in Kelvin, returns current\n\n<pre><code>temperature ...\n</code></pre>\n"],["to_kelvin","BasicTemperature","classes/BasicTemperature.html#method-i-to_kelvin","()","<p>Converts temperature to Kelvin scale. If temperature is already in Kelvin, returns current\n\n<pre><code>temperature ...\n</code></pre>\n"],["to_rankine","BasicTemperature","classes/BasicTemperature.html#method-i-to_rankine","()","<p>Converts temperature to Rankine scale. If temperature is already in Rankine, returns current temperature …\n"],["to_rankine","BasicTemperature","classes/BasicTemperature.html#method-i-to_rankine","()","<p>Converts temperature to Rankine scale. If temperature is already in Rankine, returns current temperature …\n"],["to_scale","BasicTemperature","classes/BasicTemperature.html#method-i-to_scale","(scale)","<p>Converts temperature to specific <code>scale</code>. If temperature is already in desired <code>scale</code>, returns current temperature …\n"],["to_scale","BasicTemperature","classes/BasicTemperature.html#method-i-to_scale","(scale)","<p>Converts temperature to specific <code>scale</code>. If temperature is already in desired <code>scale</code>, returns current temperature …\n"]]}}
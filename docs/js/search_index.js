var search_data = {"index":{"searchIndex":["basictemperature","temperature","additionalhelpers","assertions","casting","errors","initializationarguments","invaliddegrees","invalidnumeric","invalidnumericortemperature","invalidscale","initialization","memoization","rounding","object","<=>()","[]()","boil_water?()","freeze_water?()","new()","set_degrees()","set_scale()","to_celsius()","to_fahrenheit()","to_kelvin()","to_rankine()","to_scale()"],"longSearchIndex":["basictemperature","basictemperature::temperature","basictemperature::temperature::additionalhelpers","basictemperature::temperature::assertions","basictemperature::temperature::casting","basictemperature::temperature::errors","basictemperature::temperature::errors::initializationarguments","basictemperature::temperature::errors::invaliddegrees","basictemperature::temperature::errors::invalidnumeric","basictemperature::temperature::errors::invalidnumericortemperature","basictemperature::temperature::errors::invalidscale","basictemperature::temperature::initialization","basictemperature::temperature::memoization","basictemperature::temperature::rounding","object","basictemperature::temperature#<=>()","basictemperature::temperature::[]()","basictemperature::temperature#boil_water?()","basictemperature::temperature#freeze_water?()","basictemperature::temperature::new()","basictemperature::temperature#set_degrees()","basictemperature::temperature#set_scale()","basictemperature::temperature#to_celsius()","basictemperature::temperature#to_fahrenheit()","basictemperature::temperature#to_kelvin()","basictemperature::temperature#to_rankine()","basictemperature::temperature#to_scale()"],"info":[["BasicTemperature","","classes/BasicTemperature.html","",""],["BasicTemperature::Temperature","","classes/BasicTemperature/Temperature.html","","<p>Temperature is a simple Value Object for basic temperature operations like conversions from <code>Celsius</code> to …\n"],["BasicTemperature::Temperature::AdditionalHelpers","","classes/BasicTemperature/Temperature/AdditionalHelpers.html","",""],["BasicTemperature::Temperature::Assertions","","classes/BasicTemperature/Temperature/Assertions.html","",""],["BasicTemperature::Temperature::Casting","","classes/BasicTemperature/Temperature/Casting.html","",""],["BasicTemperature::Temperature::Errors","","classes/BasicTemperature/Temperature/Errors.html","",""],["BasicTemperature::Temperature::Errors::InitializationArguments","","classes/BasicTemperature/Temperature/Errors/InitializationArguments.html","","<p>Raised when <code>Temperature.new</code> is called with mixed positional and keyword arguments or without arguments …\n"],["BasicTemperature::Temperature::Errors::InvalidDegrees","","classes/BasicTemperature/Temperature/Errors/InvalidDegrees.html","","<p>Raised when <code>degrees</code> is not a Numeric.\n"],["BasicTemperature::Temperature::Errors::InvalidNumeric","","classes/BasicTemperature/Temperature/Errors/InvalidNumeric.html","","<p>Raised when <code>other</code> is not a Numeric in math operations.\n"],["BasicTemperature::Temperature::Errors::InvalidNumericOrTemperature","","classes/BasicTemperature/Temperature/Errors/InvalidNumericOrTemperature.html","","<p>Raised when <code>other</code> is neither Numeric nor Temperature in math operations.\n"],["BasicTemperature::Temperature::Errors::InvalidScale","","classes/BasicTemperature/Temperature/Errors/InvalidScale.html","","<p>Raised when <code>scale</code> can not be casted to any possible scale value. See SCALES.\n"],["BasicTemperature::Temperature::Initialization","","classes/BasicTemperature/Temperature/Initialization.html","",""],["BasicTemperature::Temperature::Memoization","","classes/BasicTemperature/Temperature/Memoization.html","",""],["BasicTemperature::Temperature::Rounding","","classes/BasicTemperature/Temperature/Rounding.html","",""],["Object","","classes/Object.html","",""],["<=>","BasicTemperature::Temperature","classes/BasicTemperature/Temperature.html#method-i-3C-3D-3E","(other)","<p>Compares temperture with <code>other</code> temperature.\n<p>Returns <code>0</code> if they are considered as equal.\n<p>Two temperatures …\n"],["[]","BasicTemperature::Temperature","classes/BasicTemperature/Temperature.html#method-c-5B-5D","(*args, **kwargs)","<p>Creates a new instance of Temperature. Alias for <code>new</code>.\n"],["boil_water?","BasicTemperature::Temperature","classes/BasicTemperature/Temperature.html#method-i-boil_water-3F","()","<p>Returns true when temperature boils water (is greater than or equal to 100 °C), false otherwise.\n"],["freeze_water?","BasicTemperature::Temperature","classes/BasicTemperature/Temperature.html#method-i-freeze_water-3F","()","<p>Returns true when temperature freezes water (is less than or equal to 0 °C), false otherwise.\n"],["new","BasicTemperature::Temperature","classes/BasicTemperature/Temperature.html#method-c-new","(*positional_arguments, **keyword_arguments)","<p>Creates a new instance of Temperature. Is aliased as <code>[]</code>.\n"],["set_degrees","BasicTemperature::Temperature","classes/BasicTemperature/Temperature.html#method-i-set_degrees","(degrees)","<p>Returns a new Temperature with updated <code>degrees</code>.\n\n<pre><code>temperature = Temperature[0, :celsius]\n# =&gt; 0 °C\n\nnew_temperature ...\n</code></pre>\n"],["set_scale","BasicTemperature::Temperature","classes/BasicTemperature/Temperature.html#method-i-set_scale","(scale)","<p>Returns a new Temperature with updated <code>scale</code>.\n\n<pre><code>temperature = Temperature[0, :celsius]\n# =&gt; 0 °C\n\nnew_temperature ...\n</code></pre>\n"],["to_celsius","BasicTemperature::Temperature","classes/BasicTemperature/Temperature.html#method-i-to_celsius","()","<p>Converts temperature to Celsius scale. If temperature is already in Celsius, returns current temperature …\n"],["to_fahrenheit","BasicTemperature::Temperature","classes/BasicTemperature/Temperature.html#method-i-to_fahrenheit","()","<p>Converts temperature to Fahrenheit scale. If temperature is already in Fahrenheit, returns current temperature …\n"],["to_kelvin","BasicTemperature::Temperature","classes/BasicTemperature/Temperature.html#method-i-to_kelvin","()","<p>Converts temperature to Kelvin scale. If temperature is already in Kelvin, returns current\n\n<pre><code>temperature ...\n</code></pre>\n"],["to_rankine","BasicTemperature::Temperature","classes/BasicTemperature/Temperature.html#method-i-to_rankine","()","<p>Converts temperature to Rankine scale. If temperature is already in Rankine, returns current temperature …\n"],["to_scale","BasicTemperature::Temperature","classes/BasicTemperature/Temperature.html#method-i-to_scale","(scale)","<p>Converts temperature to specific <code>scale</code>. If temperature is already in desired <code>scale</code>, returns current temperature …\n"]]}}